<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="PRG_CoatingProtectionScaledPositions" Id="{29923cda-b5d2-46e9-ade9-a120ec45a996}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_CoatingProtectionScaledPositions
VAR
	//M1 
   fbM1 : FB_MirrorCoatingProtection := (
	   	sDevName:= 'XRT-M1', 
		rFirstCoatingPosition:= -5, 
		rFirstCoatingPositionTolerance:= 1, 
		nFirstCoatingBitmask:= 2#0000_0001_1111_1111, 
		sFirstCoatingType:= 'SiC', 
		rSecondCoatingPosition:= 5 , 
		rSecondCoatingPositionTolerance:= 1 , 
		nSecondCoatingBitmask:=  2#1111_1100_0000_0000 , 
		sSecondCoatingType:= 'W', 
		bAutoClear:= TRUE);
		

//M2
   fbM2 : FB_MirrorCoatingProtection := (
	   	sDevName:= 'XRT-M2', 
		rFirstCoatingPosition:= -5, 
		rFirstCoatingPositionTolerance:= 1, 
		sFirstCoatingType:= 'SiC', 
		rSecondCoatingPosition:= 5 , 
		rSecondCoatingPositionTolerance:= 1 , 
		sSecondCoatingType:= 'W', 
		bAutoClear:= TRUE);

		
//M3 
   fbM3 : FB_MirrorCoatingProtection := (
	   	sDevName:= 'XRT-M3', 
		rFirstCoatingPosition:= -5, 
		rFirstCoatingPositionTolerance:= 1, 
		nFirstCoatingBitmask:= 2#0000_0001_1111_1111, 
		sFirstCoatingType:= 'SiC', 
		rSecondCoatingPosition:= 5 , 
		rSecondCoatingPositionTolerance:= 1 , 
		nSecondCoatingBitmask:=  2#1111_1100_0000_0000 , 
		sSecondCoatingType:= 'W', 
		bAutoClear:= TRUE);		
	
		//PMPS arbiter Interface
		fbArbiterIO : FB_SubSysToArbiter_IO;
           
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//M1
fbM1(
	bMirrorIn := (HOMS1_XGantry.PAxis.stStatus.rActPosition > -5) , // according to confluence -6 is nominal out position
    rCurrentEncoderPosition := HOMS1_YGantry.PAxis.stStatus.rActPosition,
    neVRange := PMPS.PMPS_GVL.stCurrentBeamParameters.neVRange,
    FFO := GVL_PMPS.g_FastFaultOutput1);
	
//M2
//With M2 the same coating has different bit masks depending on the pitch
IF (HOMS2_Pitch.Stepper.stStatus.rActPosition < -400 ) THEN //MFX
	fbM2.nFirstCoatingBitmask:= 2#0000_0001_1111_1111; 
	fbM2.nSecondCoatingBitmask:= 2#1111_1100_0000_0000; 
ELSIF (HOMS2_Pitch.Stepper.stStatus.rActPosition > 600) THEN //MEC
	fbM2.nFirstCoatingBitmask:= 2#1111_1111_1111_1111;  
	fbM2.nSecondCoatingBitmask:= 2#1111_1100_0000_0000;  
ELSE // Anything else in the middle of the range
	fbM2.nFirstCoatingBitmask:= 2#0000_0000_0000_0000; 
	fbM2.nSecondCoatingBitmask:= 2#0000_0000_0000_0000;  		
END_IF

fbM2(
	bMirrorIn := bXRT_M2_IN, // as implemented in Main prg
    rCurrentEncoderPosition := HOMS2_YGantry.PAxis.stStatus.rActPosition,
    neVRange := PMPS.PMPS_GVL.stCurrentBeamParameters.neVRange,
    FFO := GVL_PMPS.g_FastFaultOutput1);

	
//M3
fbM3(
	bMirrorIn:= NOT bXRT_M2_OUT, // When M1 is out, M3 is considered to be OUT
    rCurrentEncoderPosition := HOMS3_YGantry.PAxis.stStatus.rActPosition,
    neVRange := PMPS.PMPS_GVL.stCurrentBeamParameters.neVRange,
    FFO := GVL_PMPS.g_FastFaultOutput1);
	
	
// PMPS ARbiter and FFO instantiation.
GVL_PMPS.g_fbArbiter1.AddRequest(16#5, PMPS_GVL.cstFullBeam);
fbArbiterIO(Arbiter := GVL_PMPS.g_fbArbiter1, fbFFHWO := GVL_PMPS.g_FastFaultOutput1);
GVL_PMPS.g_FastFaultOutput1.Execute(bAutoReset:=TRUE, i_xVeto:=);
GVL_PMPS.g_FastFaultOutput2.Execute(bAutoReset:=TRUE, i_xVeto:=);	
]]></ST>
    </Implementation>
    <LineIds Name="PRG_CoatingProtectionScaledPositions">
      <LineId Id="3" Count="40" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>